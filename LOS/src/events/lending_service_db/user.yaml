# ONE
http.get./lending_service_db/user/{id}:
  summary: Fetch User
  description: Fetch User from database
  fn: lending_service_db_crud.user.ts.one
  authn: false
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# CREATE
http.post./lending_service_db/user:
  summary: Create a new User
  description: Create User from database
  fn: lending_service_db_crud.user.ts.create
  authn: false
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/lending_service_db/User'
  responses:
    content:
      application/json:
        schema:
          type: object

# UPDATE
http.put./lending_service_db/user/{id}:
  summary: Update a User
  description: Update User from database
  fn: lending_service_db_crud.user.y_aml_fn.update
  authn: false
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/lending_service_db/User'
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# DELETE
http.delete./lending_service_db/user/{id}:
  summary: Delete a User
  description: Delete User from database
  fn: lending_service_db_crud.user.ts.delete
  authn: false
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# SEARCH
http.post./lending_service_db/user/search:
  summary: Fetch multiple User
  description: Fetch multiple User from database
  fn: lending_service_db_crud.user.ts.search
  authn: false
  body:
    content:
      application/json:
        schema:
          type: object
  responses:
    content:
      application/json:
        schema:
          type: array

