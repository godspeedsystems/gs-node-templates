summary: Fetch many LoanApplication
tasks:
  - id: lending_service_db_loanapplication_search
    fn: datasource.lending_service_db.LoanApplication.findMany
    args: <%inputs.body%>
    caching: # In case of search be careful of caching because results may vary for same query between two searches
      before:
        datasource: in_mem_cache #the name of the datasource instance to use instead of default cache
        key: <%'LoanApplication_' + JSON.stringify(inputs.body)%> # Optional. Key name which is used to read from cache result of this task in applicable cache.
      after:
        key: <%'LoanApplication_' + JSON.stringify(inputs.body)%> # Optional. Key name which is used to write result of this task in applicable cache.
        datasource: in_mem_cache #the name of the datasource instance to use instead of default cache
        cache_on_failure: false # <true|false, whether you want to cache the failure result or not. By default, it is false>
        options: #Optional
          EX: 200 # <timer in seconds, until the cached result is valid> #Can pass any of RedisOptions, if supported by the specific caching Datasource 
    logs:
      before:
        message: About to search for LoanApplications in task
        level: debug
        attributes:
          fn_event_type: search
          fn_entity_type: LoanApplication
      after:
        message: Search LoanApplication Task Response
        level: debug
        attributes:
          fn_event_type: search
          fn_entity_type: LoanApplication
        params:
          response: <%outputs.lending_service_db_loanapplication_search.data%>